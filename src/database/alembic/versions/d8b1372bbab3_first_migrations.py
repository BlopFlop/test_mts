"""First migrations

Revision ID: d8b1372bbab3
Revises: 
Create Date: 2025-02-11 22:25:23.748258

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd8b1372bbab3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('division',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Номер в базе данных'),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=False, comment='Уникальное имя, обязательное строковое поле; Допустимая длина строки от 1 до 150 символов влкючительно.'),
    sa.CheckConstraint('LENGTH(name) > 0', name='check_not_null_division_name'),
    sa.ForeignKeyConstraint(['parent_id'], ['division.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', 'parent_id', name='division_uniq_pk_to_fk'),
    sa.UniqueConstraint('name')
    )
    op.create_table('position',
    sa.Column('name', sa.String(length=150), nullable=False, comment='Уникальное имя, обязательное строковое поле; Допустимая длина строки от 1 до 150 символов влкючительно.'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Номер в базе данных'),
    sa.CheckConstraint('LENGTH(name) > 0', name='check_not_null_position_name'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('status',
    sa.Column('name', sa.String(length=150), nullable=False, comment='Уникальное имя, обязательное строковое поле; Допустимая длина строки от 1 до 150 символов влкючительно.'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Номер в базе данных'),
    sa.CheckConstraint('LENGTH(name) > 0', name='check_not_null_status_name'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('employee',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Номер в базе данных'),
    sa.Column('first_name', sa.String(length=150), nullable=False, comment='Имя сотрудника, обязательное строковое поле; Допустимая длина строки — от 1 до 150 символов включительно;'),
    sa.Column('last_name', sa.String(length=150), nullable=False, comment='Фамилия сотрудника, обязательное строковое поле; Допустимая длина строки — от 1 до 150 символов включительно;'),
    sa.Column('middle_name', sa.String(length=150), nullable=False, comment='Отчество сотрудника, обязательное строковое поле; Допустимая длина строки — от 1 до 150 символов включительно;'),
    sa.Column('hire_date', sa.Date(), nullable=False, comment='Дата устройства сотрудника.'),
    sa.Column('termination_date', sa.Date(), nullable=True, comment='Дата увольнения сотрудника.'),
    sa.Column('is_staff', sa.Boolean(), server_default=sa.text('true'), nullable=False, comment='Булево значение, определяющее штатного сотрудника.True, штатный. False, Внештатный сотрудник.'),
    sa.Column('salary', sa.Integer(), nullable=False, comment='Зарплата сотрудника, позитивное целочисленное значение.'),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('division_id', sa.Integer(), nullable=True),
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('LENGTH(first_name) > 0', name='check_not_null_first_name'),
    sa.CheckConstraint('LENGTH(last_name) > 0', name='check_not_null_last_name'),
    sa.CheckConstraint('LENGTH(middle_name) > 0', name='check_not_null_middle_name'),
    sa.CheckConstraint('salary > 0', name='check_positive_salary'),
    sa.ForeignKeyConstraint(['division_id'], ['division.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['position.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('first_name'),
    sa.UniqueConstraint('id', 'manager_id', name='employee_uniq_pk_to_fk'),
    sa.UniqueConstraint('last_name'),
    sa.UniqueConstraint('middle_name')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('employee')
    op.drop_table('status')
    op.drop_table('position')
    op.drop_table('division')
    # ### end Alembic commands ###
